#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// net.sereneproject.collector.utils.BlockingQueueProbeValueDateFactoryBean
	c252 [label=<<table title="net.sereneproject.collector.utils.BlockingQueueProbeValueDateFactoryBean" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./BlockingQueueProbeValueDateFactoryBean.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BlockingQueueProbeValueDateFactoryBean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BlockingQueueProbeValueDateFactoryBean(capacity : int) </td></tr>
<tr><td align="left" balign="left"> + getObject() : BlockingQueue&lt;AnalyzeQueueMessage&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjectType() : Class&lt;BlockingQueue&lt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + isSingleton() : boolean </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//net.sereneproject.collector.utils.BlockingQueueProbeValueDateFactoryBean implements org.springframework.beans.factory.FactoryBean<T>
	c336:p -> c252:p [dir=back,arrowtail=empty,style=dashed];
	// net.sereneproject.collector.utils.BlockingQueueProbeValueDateFactoryBean DEPEND java.util.concurrent.BlockingQueue<E>
	c252:p -> c339:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.utils.BlockingQueueProbeValueDateFactoryBean DEPEND java.lang.Class<T>
	c252:p -> c358:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.springframework.beans.factory.FactoryBean<T>
	c336 [label=<<table title="org.springframework.beans.factory.FactoryBean" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/springframework/beans/factory/FactoryBean.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> FactoryBean&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getObject() : T </td></tr>
<tr><td align="left" balign="left"> + getObjectType() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + isSingleton() : boolean </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.Class<T>
	c358 [label=<<table title="java.lang.Class" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Class.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Class&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + forName(arg0 : String) : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + forName(arg0 : String, arg1 : boolean, arg2 : ClassLoader) : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + newInstance() : T </td></tr>
<tr><td align="left" balign="left"> + isInstance(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + isAssignableFrom(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + isInterface() : boolean </td></tr>
<tr><td align="left" balign="left"> + isArray() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPrimitive() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAnnotation() : boolean </td></tr>
<tr><td align="left" balign="left"> + isSynthetic() : boolean </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getClassLoader() : ClassLoader </td></tr>
<tr><td align="left" balign="left"> + getTypeParameters() : TypeVariable&lt;Class&lt;T&gt;&gt;[] </td></tr>
<tr><td align="left" balign="left"> + getSuperclass() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getGenericSuperclass() : Type </td></tr>
<tr><td align="left" balign="left"> + getPackage() : Package </td></tr>
<tr><td align="left" balign="left"> + getInterfaces() : Class&lt;?&gt;[] </td></tr>
<tr><td align="left" balign="left"> + getGenericInterfaces() : Type[] </td></tr>
<tr><td align="left" balign="left"> + getComponentType() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getModifiers() : int </td></tr>
<tr><td align="left" balign="left"> + getSigners() : Object[] </td></tr>
<tr><td align="left" balign="left"> + getEnclosingMethod() : Method </td></tr>
<tr><td align="left" balign="left"> + getEnclosingConstructor() : Constructor&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getDeclaringClass() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getEnclosingClass() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getSimpleName() : String </td></tr>
<tr><td align="left" balign="left"> + getCanonicalName() : String </td></tr>
<tr><td align="left" balign="left"> + isAnonymousClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isLocalClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isMemberClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + getClasses() : Class&lt;?&gt;[] </td></tr>
<tr><td align="left" balign="left"> + getFields() : Field[] </td></tr>
<tr><td align="left" balign="left"> + getMethods() : Method[] </td></tr>
<tr><td align="left" balign="left"> + getConstructors() : Constructor&lt;?&gt;[] </td></tr>
<tr><td align="left" balign="left"> + getField(arg0 : String) : Field </td></tr>
<tr><td align="left" balign="left"> + getMethod(arg0 : String, arg1 : Class&lt;?&gt;[]) : Method </td></tr>
<tr><td align="left" balign="left"> + getConstructor(arg0 : Class&lt;?&gt;[]) : Constructor&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getDeclaredClasses() : Class&lt;?&gt;[] </td></tr>
<tr><td align="left" balign="left"> + getDeclaredFields() : Field[] </td></tr>
<tr><td align="left" balign="left"> + getDeclaredMethods() : Method[] </td></tr>
<tr><td align="left" balign="left"> + getDeclaredConstructors() : Constructor&lt;?&gt;[] </td></tr>
<tr><td align="left" balign="left"> + getDeclaredField(arg0 : String) : Field </td></tr>
<tr><td align="left" balign="left"> + getDeclaredMethod(arg0 : String, arg1 : Class&lt;?&gt;[]) : Method </td></tr>
<tr><td align="left" balign="left"> + getDeclaredConstructor(arg0 : Class&lt;?&gt;[]) : Constructor&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getResourceAsStream(arg0 : String) : InputStream </td></tr>
<tr><td align="left" balign="left"> + getResource(arg0 : String) : URL </td></tr>
<tr><td align="left" balign="left"> + getProtectionDomain() : ProtectionDomain </td></tr>
<tr><td align="left" balign="left"> + desiredAssertionStatus() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnum() : boolean </td></tr>
<tr><td align="left" balign="left"> + getEnumConstants() : T[] </td></tr>
<tr><td align="left" balign="left"> + cast(arg0 : Object) : T </td></tr>
<tr><td align="left" balign="left"> + asSubclass(arg0 : Class&lt;U&gt;) : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getAnnotation(arg0 : Class&lt;A&gt;) : A </td></tr>
<tr><td align="left" balign="left"> + isAnnotationPresent(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + getAnnotations() : Annotation[] </td></tr>
<tr><td align="left" balign="left"> + getDeclaredAnnotations() : Annotation[] </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.concurrent.BlockingQueue<E>
	c339 [label=<<table title="java.util.concurrent.BlockingQueue" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/concurrent/BlockingQueue.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> BlockingQueue&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + add(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + offer(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + put(arg0 : E) </td></tr>
<tr><td align="left" balign="left"> + offer(arg0 : E, arg1 : long, arg2 : TimeUnit) : boolean </td></tr>
<tr><td align="left" balign="left"> + take() : E </td></tr>
<tr><td align="left" balign="left"> + poll(arg0 : long, arg1 : TimeUnit) : E </td></tr>
<tr><td align="left" balign="left"> + remainingCapacity() : int </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + drainTo(arg0 : Collection&lt;?&gt;) : int </td></tr>
<tr><td align="left" balign="left"> + drainTo(arg0 : Collection&lt;?&gt;, arg1 : int) : int </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

