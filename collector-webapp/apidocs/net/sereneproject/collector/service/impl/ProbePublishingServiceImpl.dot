#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// net.sereneproject.collector.dto.MonitoringMessageDto
	c1295 [label=<<table title="net.sereneproject.collector.dto.MonitoringMessageDto" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../dto/MonitoringMessageDto.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MonitoringMessageDto </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MonitoringMessageDto() </td></tr>
<tr><td align="left" balign="left"> + MonitoringMessageDto(hostname : String, probes : List&lt;ProbeDto&gt;) </td></tr>
<tr><td align="left" balign="left"> + toJson() : String </td></tr>
<tr><td align="left" balign="left"> + toJsonArray(collection : Collection&lt;MonitoringMessageDto&gt;) : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.dto.ProbeDto
	c1299 [label=<<table title="net.sereneproject.collector.dto.ProbeDto" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../dto/ProbeDto.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProbeDto </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ProbeDto() </td></tr>
<tr><td align="left" balign="left"> + ProbeDto(uuid : String, name : String, values : List&lt;ValueDto&gt;) </td></tr>
<tr><td align="left" balign="left"> + toJson() : String </td></tr>
<tr><td align="left" balign="left"> + toJsonArray(collection : Collection&lt;ProbeDto&gt;) : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.service.ProbePublishingService
	c1304 [label=<<table title="net.sereneproject.collector.service.ProbePublishingService" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../ProbePublishingService.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ProbePublishingService </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + publish(message : MonitoringMessageDto) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl
	c1311 [label=<<table title="net.sereneproject.collector.service.impl.ProbePublishingServiceImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ProbePublishingServiceImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProbePublishingServiceImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ProbePublishingServiceImpl(rrdBackendFactory : RrdBackendFactory) </td></tr>
<tr><td align="left" balign="left"> + publish(message : MonitoringMessageDto) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//net.sereneproject.collector.service.impl.ProbePublishingServiceImpl implements net.sereneproject.collector.service.ProbePublishingService
	c1304:p -> c1311:p [dir=back,arrowtail=empty,style=dashed];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl NAVASSOC java.util.concurrent.BlockingQueue<E>
	c1311:p -> c1314:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl NAVASSOC org.rrd4j.core.RrdBackendFactory
	c1311:p -> c1315:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.service.ProbePublishingService DEPEND net.sereneproject.collector.dto.MonitoringMessageDto
	c1304:p -> c1295:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl DEPEND net.sereneproject.collector.dto.ProbeDto
	c1311:p -> c1299:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl DEPEND net.sereneproject.collector.dto.MonitoringMessageDto
	c1311:p -> c1295:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl DEPEND java.util.concurrent.BlockingQueue<E>
	c1311:p -> c1314:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl DEPEND org.rrd4j.core.RrdDb
	c1311:p -> c1316:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl DEPEND org.rrd4j.core.RrdBackendFactory
	c1311:p -> c1315:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.rrd4j.core.RrdDb
	c1316 [label=<<table title="org.rrd4j.core.RrdDb" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/rrd4j/core/RrdDb.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RrdDb </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PREFIX_XML : String </td></tr>
<tr><td align="left" balign="left"> + PREFIX_RRDTool : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RrdDb(arg0 : RrdDef) </td></tr>
<tr><td align="left" balign="left"> + RrdDb(arg0 : RrdDef, arg1 : RrdBackendFactory) </td></tr>
<tr><td align="left" balign="left"> + RrdDb(arg0 : String, arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> + RrdDb(arg0 : String, arg1 : boolean, arg2 : RrdBackendFactory) </td></tr>
<tr><td align="left" balign="left"> + RrdDb(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + RrdDb(arg0 : String, arg1 : RrdBackendFactory) </td></tr>
<tr><td align="left" balign="left"> + RrdDb(arg0 : String, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + RrdDb(arg0 : String, arg1 : String, arg2 : RrdBackendFactory) </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + isClosed() : boolean </td></tr>
<tr><td align="left" balign="left"> + getHeader() : Header </td></tr>
<tr><td align="left" balign="left"> + getDatasource(arg0 : int) : Datasource </td></tr>
<tr><td align="left" balign="left"> + getArchive(arg0 : int) : Archive </td></tr>
<tr><td align="left" balign="left"> + getDsNames() : String[] </td></tr>
<tr><td align="left" balign="left"> + createSample(arg0 : long) : Sample </td></tr>
<tr><td align="left" balign="left"> + createSample() : Sample </td></tr>
<tr><td align="left" balign="left"> + createFetchRequest(arg0 : ConsolFun, arg1 : long, arg2 : long, arg3 : long) : FetchRequest </td></tr>
<tr><td align="left" balign="left"> + createFetchRequest(arg0 : ConsolFun, arg1 : long, arg2 : long) : FetchRequest </td></tr>
<tr><td align="left" balign="left"> + findMatchingArchive(arg0 : FetchRequest) : Archive </td></tr>
<tr><td align="left" balign="left"> + findStartMatchArchive(arg0 : String, arg1 : long, arg2 : long) : Archive </td></tr>
<tr><td align="left" balign="left"> + dump() : String </td></tr>
<tr><td align="left" balign="left"> + getDsIndex(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + containsDs(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + dumpXml(arg0 : OutputStream) </td></tr>
<tr><td align="left" balign="left"> + exportXml(arg0 : OutputStream) </td></tr>
<tr><td align="left" balign="left"> + getXml() : String </td></tr>
<tr><td align="left" balign="left"> + exportXml() : String </td></tr>
<tr><td align="left" balign="left"> + dumpXml(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + exportXml(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + getLastUpdateTime() : long </td></tr>
<tr><td align="left" balign="left"> + getRrdDef() : RrdDef </td></tr>
<tr><td align="left" balign="left"> # finalize() </td></tr>
<tr><td align="left" balign="left"> + copyStateTo(arg0 : RrdUpdater) </td></tr>
<tr><td align="left" balign="left"> + getDatasource(arg0 : String) : Datasource </td></tr>
<tr><td align="left" balign="left"> + getArcIndex(arg0 : ConsolFun, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + getArchive(arg0 : ConsolFun, arg1 : int) : Archive </td></tr>
<tr><td align="left" balign="left"> + getCanonicalPath() : String </td></tr>
<tr><td align="left" balign="left"> + getPath() : String </td></tr>
<tr><td align="left" balign="left"> + getRrdBackend() : RrdBackend </td></tr>
<tr><td align="left" balign="left"> + getRrdAllocator() : RrdAllocator </td></tr>
<tr><td align="left" balign="left"> + getBytes() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setDefaultFactory(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + getLastDatasourceValues() : double[] </td></tr>
<tr><td align="left" balign="left"> + getLastDatasourceValue(arg0 : String) : double </td></tr>
<tr><td align="left" balign="left"> + getDsCount() : int </td></tr>
<tr><td align="left" balign="left"> + getArcCount() : int </td></tr>
<tr><td align="left" balign="left"> + getLastArchiveUpdateTime() : long </td></tr>
<tr><td align="left" balign="left"> + getInfo() : String </td></tr>
<tr><td align="left" balign="left"> + setInfo(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + main(arg0 : String[]) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rrd4j.core.RrdBackendFactory
	c1315 [label=<<table title="org.rrd4j.core.RrdBackendFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/rrd4j/core/RrdBackendFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> RrdBackendFactory </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RrdBackendFactory() </td></tr>
<tr><td align="left" balign="left"> + getFactory(arg0 : String) : RrdBackendFactory </td></tr>
<tr><td align="left" balign="left"> + registerFactory(arg0 : RrdBackendFactory) </td></tr>
<tr><td align="left" balign="left"> + registerAndSetAsDefaultFactory(arg0 : RrdBackendFactory) </td></tr>
<tr><td align="left" balign="left"> + getDefaultFactory() : RrdBackendFactory </td></tr>
<tr><td align="left" balign="left"> + setDefaultFactory(arg0 : String) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> # open(arg0 : String, arg1 : boolean) : RrdBackend </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> # exists(arg0 : String) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> # shouldValidateHeader(arg0 : String) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getName() : String </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.concurrent.BlockingQueue<E>
	c1314 [label=<<table title="java.util.concurrent.BlockingQueue" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/concurrent/BlockingQueue.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> BlockingQueue&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + add(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + offer(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + put(arg0 : E) </td></tr>
<tr><td align="left" balign="left"> + offer(arg0 : E, arg1 : long, arg2 : TimeUnit) : boolean </td></tr>
<tr><td align="left" balign="left"> + take() : E </td></tr>
<tr><td align="left" balign="left"> + poll(arg0 : long, arg1 : TimeUnit) : E </td></tr>
<tr><td align="left" balign="left"> + remainingCapacity() : int </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + drainTo(arg0 : Collection&lt;?&gt;) : int </td></tr>
<tr><td align="left" balign="left"> + drainTo(arg0 : Collection&lt;?&gt;, arg1 : int) : int </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

