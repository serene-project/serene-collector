#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// net.sereneproject.collector.domain.ProbeValue
	c591 [label=<<table title="net.sereneproject.collector.domain.ProbeValue" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ProbeValue.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProbeValue </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ProbeValue() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.domain.Probe
	c592 [label=<<table title="net.sereneproject.collector.domain.Probe" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Probe.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Probe </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Probe() </td></tr>
<tr><td align="left" balign="left"> + setUuid(uuid : String) </td></tr>
<tr><td align="left" balign="left"> + setUuid(uuid : UUID) </td></tr>
<tr><td align="left" balign="left"> + getUuid() : UUID </td></tr>
<tr><td align="left" balign="left"> + findProbeByUuidEquals(uuid : String) : Probe </td></tr>
<tr><td align="left" balign="left"> + findProbeByUuidEquals(uuid : UUID) : Probe </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.service.AnalyzerService
	c600 [label=<<table title="net.sereneproject.collector.service.AnalyzerService" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../service/AnalyzerService.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> AnalyzerService </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + analyze(probeValue : ProbeValue) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.service.impl.AnalyzerServiceImpl
	c602 [label=<<table title="net.sereneproject.collector.service.impl.AnalyzerServiceImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../service/impl/AnalyzerServiceImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AnalyzerServiceImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AnalyzerServiceImpl(communicationService : AnalyzerPluginCommunicationService) </td></tr>
<tr><td align="left" balign="left"> + analyze(probeValue : ProbeValue) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//net.sereneproject.collector.service.impl.AnalyzerServiceImpl implements net.sereneproject.collector.service.AnalyzerService
	c600:p -> c602:p [dir=back,arrowtail=empty,style=dashed];
	// net.sereneproject.collector.domain.ProbeValue NAVASSOC java.lang.Double
	c591:p -> c604:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.ProbeValue NAVASSOC java.util.Date
	c591:p -> c605:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.ProbeValue NAVASSOC net.sereneproject.collector.domain.Probe
	c591:p -> c592:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.service.AnalyzerService DEPEND net.sereneproject.collector.domain.ProbeValue
	c600:p -> c591:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.service.impl.AnalyzerServiceImpl DEPEND net.sereneproject.collector.domain.ProbeValue
	c602:p -> c591:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// java.lang.Double
	c604 [label=<<table title="java.lang.Double" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Double.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + POSITIVE_INFINITY : double </td></tr>
<tr><td align="left" balign="left"> + NEGATIVE_INFINITY : double </td></tr>
<tr><td align="left" balign="left"> + NaN : double </td></tr>
<tr><td align="left" balign="left"> + MAX_VALUE : double </td></tr>
<tr><td align="left" balign="left"> + MIN_NORMAL : double </td></tr>
<tr><td align="left" balign="left"> + MIN_VALUE : double </td></tr>
<tr><td align="left" balign="left"> + MAX_EXPONENT : int </td></tr>
<tr><td align="left" balign="left"> + MIN_EXPONENT : int </td></tr>
<tr><td align="left" balign="left"> + SIZE : int </td></tr>
<tr><td align="left" balign="left"> + TYPE : Class&lt;Double&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Double(arg0 : double) </td></tr>
<tr><td align="left" balign="left"> + Double(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + toString(arg0 : double) : String </td></tr>
<tr><td align="left" balign="left"> + toHexString(arg0 : double) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : String) : Double </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : double) : Double </td></tr>
<tr><td align="left" balign="left"> + parseDouble(arg0 : String) : double </td></tr>
<tr><td align="left" balign="left"> + isNaN(arg0 : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + isInfinite(arg0 : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + isNaN() : boolean </td></tr>
<tr><td align="left" balign="left"> + isInfinite() : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + byteValue() : byte </td></tr>
<tr><td align="left" balign="left"> + shortValue() : short </td></tr>
<tr><td align="left" balign="left"> + intValue() : int </td></tr>
<tr><td align="left" balign="left"> + longValue() : long </td></tr>
<tr><td align="left" balign="left"> + floatValue() : float </td></tr>
<tr><td align="left" balign="left"> + doubleValue() : double </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + doubleToLongBits(arg0 : double) : long </td></tr>
<tr><td align="left" balign="left"> + doubleToRawLongBits(arg0 : double) : long </td></tr>
<tr><td align="left" balign="left"> + longBitsToDouble(arg0 : long) : double </td></tr>
<tr><td align="left" balign="left"> + compareTo(arg0 : Double) : int </td></tr>
<tr><td align="left" balign="left"> + compare(arg0 : double, arg1 : double) : int </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.Date
	c605 [label=<<table title="java.util.Date" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Date.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Date </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Date() </td></tr>
<tr><td align="left" balign="left"> + Date(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + Date(arg0 : int, arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + Date(arg0 : int, arg1 : int, arg2 : int, arg3 : int, arg4 : int) </td></tr>
<tr><td align="left" balign="left"> + Date(arg0 : int, arg1 : int, arg2 : int, arg3 : int, arg4 : int, arg5 : int) </td></tr>
<tr><td align="left" balign="left"> + Date(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + UTC(arg0 : int, arg1 : int, arg2 : int, arg3 : int, arg4 : int, arg5 : int) : long </td></tr>
<tr><td align="left" balign="left"> + parse(arg0 : String) : long </td></tr>
<tr><td align="left" balign="left"> + getYear() : int </td></tr>
<tr><td align="left" balign="left"> + setYear(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getMonth() : int </td></tr>
<tr><td align="left" balign="left"> + setMonth(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getDate() : int </td></tr>
<tr><td align="left" balign="left"> + setDate(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getDay() : int </td></tr>
<tr><td align="left" balign="left"> + getHours() : int </td></tr>
<tr><td align="left" balign="left"> + setHours(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getMinutes() : int </td></tr>
<tr><td align="left" balign="left"> + setMinutes(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getSeconds() : int </td></tr>
<tr><td align="left" balign="left"> + setSeconds(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getTime() : long </td></tr>
<tr><td align="left" balign="left"> + setTime(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + before(arg0 : Date) : boolean </td></tr>
<tr><td align="left" balign="left"> + after(arg0 : Date) : boolean </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + compareTo(arg0 : Date) : int </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + toLocaleString() : String </td></tr>
<tr><td align="left" balign="left"> + toGMTString() : String </td></tr>
<tr><td align="left" balign="left"> + getTimezoneOffset() : int </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

