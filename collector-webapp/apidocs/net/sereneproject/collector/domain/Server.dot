#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// net.sereneproject.collector.domain.Probe
	c907 [label=<<table title="net.sereneproject.collector.domain.Probe" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Probe.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Probe </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Probe() </td></tr>
<tr><td align="left" balign="left"> + setUuid(uuid : String) </td></tr>
<tr><td align="left" balign="left"> + setUuid(uuid : UUID) </td></tr>
<tr><td align="left" balign="left"> + getUuid() : UUID </td></tr>
<tr><td align="left" balign="left"> + findProbeByUuidEquals(uuid : String) : Probe </td></tr>
<tr><td align="left" balign="left"> + findProbeByUuidEquals(uuid : UUID) : Probe </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.domain.Server
	c908 [label=<<table title="net.sereneproject.collector.domain.Server" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Server.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Server </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Server() </td></tr>
<tr><td align="left" balign="left"> + setUuid(uuid : String) </td></tr>
<tr><td align="left" balign="left"> + setUuid(uuid : UUID) </td></tr>
<tr><td align="left" balign="left"> + getUuid() : UUID </td></tr>
<tr><td align="left" balign="left"> + findServerByUuidEquals(uuid : String) : Server </td></tr>
<tr><td align="left" balign="left"> + findServerByUuidEquals(uuid : UUID) : Server </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.domain.ServerGroup
	c910 [label=<<table title="net.sereneproject.collector.domain.ServerGroup" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ServerGroup.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ServerGroup </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ServerGroup() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl
	c918 [label=<<table title="net.sereneproject.collector.service.impl.ProbePublishingServiceImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../service/impl/ProbePublishingServiceImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProbePublishingServiceImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ProbePublishingServiceImpl() </td></tr>
<tr><td align="left" balign="left"> + publish(message : MonitoringMessageDto) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.domain.Probe NAVASSOC java.lang.String
	c907:p -> c919:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.Probe NAVASSOC java.lang.Long
	c907:p -> c920:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.Probe NAVASSOC java.lang.Long
	c907:p -> c920:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.Probe NAVASSOC net.sereneproject.collector.domain.Server
	c907:p -> c908:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.Server NAVASSOC java.lang.String
	c908:p -> c919:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.Server NAVASSOC java.lang.Long
	c908:p -> c920:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.Server NAVASSOC java.lang.Long
	c908:p -> c920:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.Server NAVASSOC net.sereneproject.collector.domain.ServerGroup
	c908:p -> c910:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.ServerGroup NAVASSOC java.lang.String
	c910:p -> c919:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.Probe DEPEND java.util.UUID
	c907:p -> c921:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.domain.Probe DEPEND java.lang.String
	c907:p -> c919:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.domain.Server DEPEND java.util.UUID
	c908:p -> c921:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.domain.Server DEPEND java.lang.String
	c908:p -> c919:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl DEPEND net.sereneproject.collector.domain.ServerGroup
	c918:p -> c910:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl DEPEND java.lang.String
	c918:p -> c919:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl DEPEND net.sereneproject.collector.domain.Server
	c918:p -> c908:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.service.impl.ProbePublishingServiceImpl DEPEND net.sereneproject.collector.domain.Probe
	c918:p -> c907:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// java.lang.Long
	c920 [label=<<table title="java.lang.Long" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Long.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MIN_VALUE : long </td></tr>
<tr><td align="left" balign="left"> + MAX_VALUE : long </td></tr>
<tr><td align="left" balign="left"> + TYPE : Class&lt;Long&gt; </td></tr>
<tr><td align="left" balign="left"> + SIZE : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Long(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + Long(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + toString(arg0 : long, arg1 : int) : String </td></tr>
<tr><td align="left" balign="left"> + toHexString(arg0 : long) : String </td></tr>
<tr><td align="left" balign="left"> + toOctalString(arg0 : long) : String </td></tr>
<tr><td align="left" balign="left"> + toBinaryString(arg0 : long) : String </td></tr>
<tr><td align="left" balign="left"> + toString(arg0 : long) : String </td></tr>
<tr><td align="left" balign="left"> + parseLong(arg0 : String, arg1 : int) : long </td></tr>
<tr><td align="left" balign="left"> + parseLong(arg0 : String) : long </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : String, arg1 : int) : Long </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : String) : Long </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : long) : Long </td></tr>
<tr><td align="left" balign="left"> + decode(arg0 : String) : Long </td></tr>
<tr><td align="left" balign="left"> + byteValue() : byte </td></tr>
<tr><td align="left" balign="left"> + shortValue() : short </td></tr>
<tr><td align="left" balign="left"> + intValue() : int </td></tr>
<tr><td align="left" balign="left"> + longValue() : long </td></tr>
<tr><td align="left" balign="left"> + floatValue() : float </td></tr>
<tr><td align="left" balign="left"> + doubleValue() : double </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getLong(arg0 : String) : Long </td></tr>
<tr><td align="left" balign="left"> + getLong(arg0 : String, arg1 : long) : Long </td></tr>
<tr><td align="left" balign="left"> + getLong(arg0 : String, arg1 : Long) : Long </td></tr>
<tr><td align="left" balign="left"> + compareTo(arg0 : Long) : int </td></tr>
<tr><td align="left" balign="left"> + highestOneBit(arg0 : long) : long </td></tr>
<tr><td align="left" balign="left"> + lowestOneBit(arg0 : long) : long </td></tr>
<tr><td align="left" balign="left"> + numberOfLeadingZeros(arg0 : long) : int </td></tr>
<tr><td align="left" balign="left"> + numberOfTrailingZeros(arg0 : long) : int </td></tr>
<tr><td align="left" balign="left"> + bitCount(arg0 : long) : int </td></tr>
<tr><td align="left" balign="left"> + rotateLeft(arg0 : long, arg1 : int) : long </td></tr>
<tr><td align="left" balign="left"> + rotateRight(arg0 : long, arg1 : int) : long </td></tr>
<tr><td align="left" balign="left"> + reverse(arg0 : long) : long </td></tr>
<tr><td align="left" balign="left"> + signum(arg0 : long) : int </td></tr>
<tr><td align="left" balign="left"> + reverseBytes(arg0 : long) : long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.String
	c919 [label=<<table title="java.lang.String" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CASE_INSENSITIVE_ORDER : Comparator&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + String() </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : char[]) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : char[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : int[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : Charset) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : Charset) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[]) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : StringBuffer) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : StringBuilder) </td></tr>
<tr><td align="left" balign="left"> + length() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + charAt(arg0 : int) : char </td></tr>
<tr><td align="left" balign="left"> + codePointAt(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + codePointBefore(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + codePointCount(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + offsetByCodePoints(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + getChars(arg0 : int, arg1 : int, arg2 : char[], arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : int, arg1 : int, arg2 : byte[], arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : String) : byte[] </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : Charset) : byte[] </td></tr>
<tr><td align="left" balign="left"> + getBytes() : byte[] </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + contentEquals(arg0 : StringBuffer) : boolean </td></tr>
<tr><td align="left" balign="left"> + contentEquals(arg0 : CharSequence) : boolean </td></tr>
<tr><td align="left" balign="left"> + equalsIgnoreCase(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + compareTo(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + compareToIgnoreCase(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + regionMatches(arg0 : int, arg1 : String, arg2 : int, arg3 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + regionMatches(arg0 : boolean, arg1 : int, arg2 : String, arg3 : int, arg4 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + startsWith(arg0 : String, arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + startsWith(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + endsWith(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : String, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : String, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + substring(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> + substring(arg0 : int, arg1 : int) : String </td></tr>
<tr><td align="left" balign="left"> + subSequence(arg0 : int, arg1 : int) : CharSequence </td></tr>
<tr><td align="left" balign="left"> + concat(arg0 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replace(arg0 : char, arg1 : char) : String </td></tr>
<tr><td align="left" balign="left"> + matches(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : CharSequence) : boolean </td></tr>
<tr><td align="left" balign="left"> + replaceFirst(arg0 : String, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replaceAll(arg0 : String, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replace(arg0 : CharSequence, arg1 : CharSequence) : String </td></tr>
<tr><td align="left" balign="left"> + split(arg0 : String, arg1 : int) : String[] </td></tr>
<tr><td align="left" balign="left"> + split(arg0 : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + toLowerCase(arg0 : Locale) : String </td></tr>
<tr><td align="left" balign="left"> + toLowerCase() : String </td></tr>
<tr><td align="left" balign="left"> + toUpperCase(arg0 : Locale) : String </td></tr>
<tr><td align="left" balign="left"> + toUpperCase() : String </td></tr>
<tr><td align="left" balign="left"> + trim() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + toCharArray() : char[] </td></tr>
<tr><td align="left" balign="left"> + format(arg0 : String, arg1 : Object[]) : String </td></tr>
<tr><td align="left" balign="left"> + format(arg0 : Locale, arg1 : String, arg2 : Object[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : Object) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char[], arg1 : int, arg2 : int) : String </td></tr>
<tr><td align="left" balign="left"> + copyValueOf(arg0 : char[], arg1 : int, arg2 : int) : String </td></tr>
<tr><td align="left" balign="left"> + copyValueOf(arg0 : char[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : long) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : float) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : double) : String </td></tr>
<tr><td align="left" balign="left"> + intern() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.UUID
	c921 [label=<<table title="java.util.UUID" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/UUID.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UUID </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UUID(arg0 : long, arg1 : long) </td></tr>
<tr><td align="left" balign="left"> + randomUUID() : UUID </td></tr>
<tr><td align="left" balign="left"> + nameUUIDFromBytes(arg0 : byte[]) : UUID </td></tr>
<tr><td align="left" balign="left"> + fromString(arg0 : String) : UUID </td></tr>
<tr><td align="left" balign="left"> + getLeastSignificantBits() : long </td></tr>
<tr><td align="left" balign="left"> + getMostSignificantBits() : long </td></tr>
<tr><td align="left" balign="left"> + version() : int </td></tr>
<tr><td align="left" balign="left"> + variant() : int </td></tr>
<tr><td align="left" balign="left"> + timestamp() : long </td></tr>
<tr><td align="left" balign="left"> + clockSequence() : int </td></tr>
<tr><td align="left" balign="left"> + node() : long </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + compareTo(arg0 : UUID) : int </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

