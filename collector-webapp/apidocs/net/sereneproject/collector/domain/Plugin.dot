#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// net.sereneproject.collector.domain.Probe
	c980 [label=<<table title="net.sereneproject.collector.domain.Probe" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Probe.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Probe </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Probe() </td></tr>
<tr><td align="left" balign="left"> + setUuid(uuid : String) </td></tr>
<tr><td align="left" balign="left"> + setUuid(uuid : UUID) </td></tr>
<tr><td align="left" balign="left"> + getUuid() : UUID </td></tr>
<tr><td align="left" balign="left"> + findProbeByUuidEquals(uuid : String) : Probe </td></tr>
<tr><td align="left" balign="left"> + findProbesByNodeIsNull() : TypedQuery&lt;Probe&gt; </td></tr>
<tr><td align="left" balign="left"> + findProbeByUuidEquals(uuid : UUID) : Probe </td></tr>
<tr><td align="left" balign="left"> + exists(uuid : UUID) : boolean </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.domain.Plugin
	c981 [label=<<table title="net.sereneproject.collector.domain.Plugin" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Plugin.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Plugin </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Plugin() </td></tr>
<tr><td align="left" balign="left"> + getUri() : URI </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.domain.PluginStatus
	c982 [label=<<table title="net.sereneproject.collector.domain.PluginStatus" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PluginStatus.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PluginStatus </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PluginStatus() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.domain.Probe NAVASSOC java.lang.String
	c980:p -> c994:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.Plugin NAVASSOC java.lang.String
	c981:p -> c994:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.Plugin NAVASSOC java.lang.String
	c981:p -> c994:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.Plugin NAVASSOC net.sereneproject.collector.domain.Probe
	c981:p -> c980:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.PluginStatus NAVASSOC java.lang.String
	c982:p -> c994:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.PluginStatus NAVASSOC net.sereneproject.collector.domain.Plugin
	c982:p -> c981:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.domain.Probe DEPEND java.lang.String
	c980:p -> c994:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.domain.Plugin DEPEND java.net.URI
	c981:p -> c995:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// java.lang.String
	c994 [label=<<table title="java.lang.String" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CASE_INSENSITIVE_ORDER : Comparator&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + String() </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : char[]) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : char[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : int[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : Charset) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : Charset) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[]) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : StringBuffer) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : StringBuilder) </td></tr>
<tr><td align="left" balign="left"> + length() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + charAt(arg0 : int) : char </td></tr>
<tr><td align="left" balign="left"> + codePointAt(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + codePointBefore(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + codePointCount(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + offsetByCodePoints(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + getChars(arg0 : int, arg1 : int, arg2 : char[], arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : int, arg1 : int, arg2 : byte[], arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : String) : byte[] </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : Charset) : byte[] </td></tr>
<tr><td align="left" balign="left"> + getBytes() : byte[] </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + contentEquals(arg0 : StringBuffer) : boolean </td></tr>
<tr><td align="left" balign="left"> + contentEquals(arg0 : CharSequence) : boolean </td></tr>
<tr><td align="left" balign="left"> + equalsIgnoreCase(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + compareTo(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + compareToIgnoreCase(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + regionMatches(arg0 : int, arg1 : String, arg2 : int, arg3 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + regionMatches(arg0 : boolean, arg1 : int, arg2 : String, arg3 : int, arg4 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + startsWith(arg0 : String, arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + startsWith(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + endsWith(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : String, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : String, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + substring(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> + substring(arg0 : int, arg1 : int) : String </td></tr>
<tr><td align="left" balign="left"> + subSequence(arg0 : int, arg1 : int) : CharSequence </td></tr>
<tr><td align="left" balign="left"> + concat(arg0 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replace(arg0 : char, arg1 : char) : String </td></tr>
<tr><td align="left" balign="left"> + matches(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : CharSequence) : boolean </td></tr>
<tr><td align="left" balign="left"> + replaceFirst(arg0 : String, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replaceAll(arg0 : String, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replace(arg0 : CharSequence, arg1 : CharSequence) : String </td></tr>
<tr><td align="left" balign="left"> + split(arg0 : String, arg1 : int) : String[] </td></tr>
<tr><td align="left" balign="left"> + split(arg0 : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + toLowerCase(arg0 : Locale) : String </td></tr>
<tr><td align="left" balign="left"> + toLowerCase() : String </td></tr>
<tr><td align="left" balign="left"> + toUpperCase(arg0 : Locale) : String </td></tr>
<tr><td align="left" balign="left"> + toUpperCase() : String </td></tr>
<tr><td align="left" balign="left"> + trim() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + toCharArray() : char[] </td></tr>
<tr><td align="left" balign="left"> + format(arg0 : String, arg1 : Object[]) : String </td></tr>
<tr><td align="left" balign="left"> + format(arg0 : Locale, arg1 : String, arg2 : Object[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : Object) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char[], arg1 : int, arg2 : int) : String </td></tr>
<tr><td align="left" balign="left"> + copyValueOf(arg0 : char[], arg1 : int, arg2 : int) : String </td></tr>
<tr><td align="left" balign="left"> + copyValueOf(arg0 : char[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : long) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : float) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : double) : String </td></tr>
<tr><td align="left" balign="left"> + intern() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.net.URI
	c995 [label=<<table title="java.net.URI" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/net/URI.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> URI </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + URI(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + URI(arg0 : String, arg1 : String, arg2 : String, arg3 : int, arg4 : String, arg5 : String, arg6 : String) </td></tr>
<tr><td align="left" balign="left"> + URI(arg0 : String, arg1 : String, arg2 : String, arg3 : String, arg4 : String) </td></tr>
<tr><td align="left" balign="left"> + URI(arg0 : String, arg1 : String, arg2 : String, arg3 : String) </td></tr>
<tr><td align="left" balign="left"> + URI(arg0 : String, arg1 : String, arg2 : String) </td></tr>
<tr><td align="left" balign="left"> + create(arg0 : String) : URI </td></tr>
<tr><td align="left" balign="left"> + parseServerAuthority() : URI </td></tr>
<tr><td align="left" balign="left"> + normalize() : URI </td></tr>
<tr><td align="left" balign="left"> + resolve(arg0 : URI) : URI </td></tr>
<tr><td align="left" balign="left"> + resolve(arg0 : String) : URI </td></tr>
<tr><td align="left" balign="left"> + relativize(arg0 : URI) : URI </td></tr>
<tr><td align="left" balign="left"> + toURL() : URL </td></tr>
<tr><td align="left" balign="left"> + getScheme() : String </td></tr>
<tr><td align="left" balign="left"> + isAbsolute() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOpaque() : boolean </td></tr>
<tr><td align="left" balign="left"> + getRawSchemeSpecificPart() : String </td></tr>
<tr><td align="left" balign="left"> + getSchemeSpecificPart() : String </td></tr>
<tr><td align="left" balign="left"> + getRawAuthority() : String </td></tr>
<tr><td align="left" balign="left"> + getAuthority() : String </td></tr>
<tr><td align="left" balign="left"> + getRawUserInfo() : String </td></tr>
<tr><td align="left" balign="left"> + getUserInfo() : String </td></tr>
<tr><td align="left" balign="left"> + getHost() : String </td></tr>
<tr><td align="left" balign="left"> + getPort() : int </td></tr>
<tr><td align="left" balign="left"> + getRawPath() : String </td></tr>
<tr><td align="left" balign="left"> + getPath() : String </td></tr>
<tr><td align="left" balign="left"> + getRawQuery() : String </td></tr>
<tr><td align="left" balign="left"> + getQuery() : String </td></tr>
<tr><td align="left" balign="left"> + getRawFragment() : String </td></tr>
<tr><td align="left" balign="left"> + getFragment() : String </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + compareTo(arg0 : URI) : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + toASCIIString() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

