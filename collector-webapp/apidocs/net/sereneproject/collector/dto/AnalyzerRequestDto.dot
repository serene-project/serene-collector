#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// net.sereneproject.collector.dto.AnalyzerRequestDto
	c795 [label=<<table title="net.sereneproject.collector.dto.AnalyzerRequestDto" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./AnalyzerRequestDto.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AnalyzerRequestDto </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AnalyzerRequestDto() </td></tr>
<tr><td align="left" balign="left"> + toJson() : String </td></tr>
<tr><td align="left" balign="left"> + toJsonArray(collection : Collection&lt;AnalyzerRequestDto&gt;) : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.service.AnalyzerPluginCommunicationService
	c804 [label=<<table title="net.sereneproject.collector.service.AnalyzerPluginCommunicationService" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../service/AnalyzerPluginCommunicationService.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> AnalyzerPluginCommunicationService </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + send(uri : URI, request : AnalyzerRequestDto) : AnalyzerResponseDto </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.service.impl.HttpAnalyzerPluginCommunication
	c807 [label=<<table title="net.sereneproject.collector.service.impl.HttpAnalyzerPluginCommunication" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../service/impl/HttpAnalyzerPluginCommunication.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HttpAnalyzerPluginCommunication </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HttpAnalyzerPluginCommunication(client : HttpClient) </td></tr>
<tr><td align="left" balign="left"> + send(uri : URI, request : AnalyzerRequestDto) : AnalyzerResponseDto </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//net.sereneproject.collector.service.impl.HttpAnalyzerPluginCommunication implements net.sereneproject.collector.service.AnalyzerPluginCommunicationService
	c804:p -> c807:p [dir=back,arrowtail=empty,style=dashed];
	// net.sereneproject.collector.dto.AnalyzerRequestDto NAVASSOC java.util.Set<E>
	c795:p -> c813:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.dto.AnalyzerRequestDto NAVASSOC java.util.Date
	c795:p -> c818:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.dto.AnalyzerRequestDto NAVASSOC java.lang.String
	c795:p -> c819:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.dto.AnalyzerRequestDto DEPEND java.util.Collection<E>
	c795:p -> c820:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.dto.AnalyzerRequestDto DEPEND java.lang.String
	c795:p -> c819:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.service.AnalyzerPluginCommunicationService DEPEND net.sereneproject.collector.dto.AnalyzerRequestDto
	c804:p -> c795:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.service.impl.HttpAnalyzerPluginCommunication DEPEND net.sereneproject.collector.dto.AnalyzerRequestDto
	c807:p -> c795:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// java.util.Set<E>
	c813 [label=<<table title="java.util.Set" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Set.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Set&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + iterator() : Iterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + toArray() : Object[] </td></tr>
<tr><td align="left" balign="left"> + toArray(arg0 : T[]) : T[] </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + retainAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.Collection<E>
	c820 [label=<<table title="java.util.Collection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Collection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Collection&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + iterator() : Iterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + toArray() : Object[] </td></tr>
<tr><td align="left" balign="left"> + toArray(arg0 : T[]) : T[] </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + retainAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.String
	c819 [label=<<table title="java.lang.String" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CASE_INSENSITIVE_ORDER : Comparator&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + String() </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : char[]) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : char[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : int[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : Charset) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : Charset) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[]) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : StringBuffer) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : StringBuilder) </td></tr>
<tr><td align="left" balign="left"> + length() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + charAt(arg0 : int) : char </td></tr>
<tr><td align="left" balign="left"> + codePointAt(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + codePointBefore(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + codePointCount(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + offsetByCodePoints(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + getChars(arg0 : int, arg1 : int, arg2 : char[], arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : int, arg1 : int, arg2 : byte[], arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : String) : byte[] </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : Charset) : byte[] </td></tr>
<tr><td align="left" balign="left"> + getBytes() : byte[] </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + contentEquals(arg0 : StringBuffer) : boolean </td></tr>
<tr><td align="left" balign="left"> + contentEquals(arg0 : CharSequence) : boolean </td></tr>
<tr><td align="left" balign="left"> + equalsIgnoreCase(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + compareTo(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + compareToIgnoreCase(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + regionMatches(arg0 : int, arg1 : String, arg2 : int, arg3 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + regionMatches(arg0 : boolean, arg1 : int, arg2 : String, arg3 : int, arg4 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + startsWith(arg0 : String, arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + startsWith(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + endsWith(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : String, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : String, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + substring(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> + substring(arg0 : int, arg1 : int) : String </td></tr>
<tr><td align="left" balign="left"> + subSequence(arg0 : int, arg1 : int) : CharSequence </td></tr>
<tr><td align="left" balign="left"> + concat(arg0 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replace(arg0 : char, arg1 : char) : String </td></tr>
<tr><td align="left" balign="left"> + matches(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : CharSequence) : boolean </td></tr>
<tr><td align="left" balign="left"> + replaceFirst(arg0 : String, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replaceAll(arg0 : String, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replace(arg0 : CharSequence, arg1 : CharSequence) : String </td></tr>
<tr><td align="left" balign="left"> + split(arg0 : String, arg1 : int) : String[] </td></tr>
<tr><td align="left" balign="left"> + split(arg0 : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + toLowerCase(arg0 : Locale) : String </td></tr>
<tr><td align="left" balign="left"> + toLowerCase() : String </td></tr>
<tr><td align="left" balign="left"> + toUpperCase(arg0 : Locale) : String </td></tr>
<tr><td align="left" balign="left"> + toUpperCase() : String </td></tr>
<tr><td align="left" balign="left"> + trim() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + toCharArray() : char[] </td></tr>
<tr><td align="left" balign="left"> + format(arg0 : String, arg1 : Object[]) : String </td></tr>
<tr><td align="left" balign="left"> + format(arg0 : Locale, arg1 : String, arg2 : Object[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : Object) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char[], arg1 : int, arg2 : int) : String </td></tr>
<tr><td align="left" balign="left"> + copyValueOf(arg0 : char[], arg1 : int, arg2 : int) : String </td></tr>
<tr><td align="left" balign="left"> + copyValueOf(arg0 : char[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : long) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : float) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : double) : String </td></tr>
<tr><td align="left" balign="left"> + intern() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.Date
	c818 [label=<<table title="java.util.Date" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Date.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Date </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Date() </td></tr>
<tr><td align="left" balign="left"> + Date(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + Date(arg0 : int, arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + Date(arg0 : int, arg1 : int, arg2 : int, arg3 : int, arg4 : int) </td></tr>
<tr><td align="left" balign="left"> + Date(arg0 : int, arg1 : int, arg2 : int, arg3 : int, arg4 : int, arg5 : int) </td></tr>
<tr><td align="left" balign="left"> + Date(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + UTC(arg0 : int, arg1 : int, arg2 : int, arg3 : int, arg4 : int, arg5 : int) : long </td></tr>
<tr><td align="left" balign="left"> + parse(arg0 : String) : long </td></tr>
<tr><td align="left" balign="left"> + getYear() : int </td></tr>
<tr><td align="left" balign="left"> + setYear(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getMonth() : int </td></tr>
<tr><td align="left" balign="left"> + setMonth(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getDate() : int </td></tr>
<tr><td align="left" balign="left"> + setDate(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getDay() : int </td></tr>
<tr><td align="left" balign="left"> + getHours() : int </td></tr>
<tr><td align="left" balign="left"> + setHours(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getMinutes() : int </td></tr>
<tr><td align="left" balign="left"> + setMinutes(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getSeconds() : int </td></tr>
<tr><td align="left" balign="left"> + setSeconds(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getTime() : long </td></tr>
<tr><td align="left" balign="left"> + setTime(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + before(arg0 : Date) : boolean </td></tr>
<tr><td align="left" balign="left"> + after(arg0 : Date) : boolean </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + compareTo(arg0 : Date) : int </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + toLocaleString() : String </td></tr>
<tr><td align="left" balign="left"> + toGMTString() : String </td></tr>
<tr><td align="left" balign="left"> + getTimezoneOffset() : int </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

