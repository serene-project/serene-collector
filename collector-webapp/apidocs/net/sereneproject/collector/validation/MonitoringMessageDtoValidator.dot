#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// net.sereneproject.collector.web.CollectorController
	c987 [label=<<table title="net.sereneproject.collector.web.CollectorController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../web/CollectorController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CollectorController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CollectorController() </td></tr>
<tr><td align="left" balign="left"> + postMonitoring(json : String) : ResponseEntity&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.validation.MonitoringMessageDtoValidator
	c1005 [label=<<table title="net.sereneproject.collector.validation.MonitoringMessageDtoValidator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./MonitoringMessageDtoValidator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MonitoringMessageDtoValidator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MonitoringMessageDtoValidator(probeValueValidator : ProbeValueDtoValidator) </td></tr>
<tr><td align="left" balign="left"> + supports(clazz : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(target : Object, errors : Errors) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.sereneproject.collector.validation.ProbeValueDtoValidator
	c1006 [label=<<table title="net.sereneproject.collector.validation.ProbeValueDtoValidator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ProbeValueDtoValidator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProbeValueDtoValidator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ProbeValueDtoValidator() </td></tr>
<tr><td align="left" balign="left"> + supports(clazz : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(target : Object, errors : Errors) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//net.sereneproject.collector.validation.MonitoringMessageDtoValidator implements org.springframework.validation.Validator
	c1013:p -> c1005:p [dir=back,arrowtail=empty,style=dashed];
	//net.sereneproject.collector.validation.ProbeValueDtoValidator implements org.springframework.validation.Validator
	c1013:p -> c1006:p [dir=back,arrowtail=empty,style=dashed];
	// net.sereneproject.collector.web.CollectorController NAVASSOC net.sereneproject.collector.validation.MonitoringMessageDtoValidator
	c987:p -> c1005:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.validation.MonitoringMessageDtoValidator NAVASSOC net.sereneproject.collector.validation.ProbeValueDtoValidator
	c1005:p -> c1006:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// net.sereneproject.collector.web.CollectorController DEPEND net.sereneproject.collector.validation.MonitoringMessageDtoValidator
	c987:p -> c1005:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.validation.MonitoringMessageDtoValidator DEPEND org.springframework.validation.Errors
	c1005:p -> c1014:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.validation.MonitoringMessageDtoValidator DEPEND java.lang.Object
	c1005:p -> c1015:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.validation.MonitoringMessageDtoValidator DEPEND java.lang.Class<T>
	c1005:p -> c1016:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.validation.ProbeValueDtoValidator DEPEND org.springframework.validation.Errors
	c1006:p -> c1014:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.validation.ProbeValueDtoValidator DEPEND java.lang.Class<T>
	c1006:p -> c1016:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// net.sereneproject.collector.validation.ProbeValueDtoValidator DEPEND java.lang.Object
	c1006:p -> c1015:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.springframework.validation.Validator
	c1013 [label=<<table title="org.springframework.validation.Validator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/springframework/validation/Validator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Validator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + supports(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(arg0 : Object, arg1 : Errors) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.Class<T>
	c1016 [label=<<table title="java.lang.Class" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Class.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Class&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + forName(arg0 : String) : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + forName(arg0 : String, arg1 : boolean, arg2 : ClassLoader) : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + newInstance() : T </td></tr>
<tr><td align="left" balign="left"> + isInstance(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + isAssignableFrom(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + isInterface() : boolean </td></tr>
<tr><td align="left" balign="left"> + isArray() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPrimitive() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAnnotation() : boolean </td></tr>
<tr><td align="left" balign="left"> + isSynthetic() : boolean </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getClassLoader() : ClassLoader </td></tr>
<tr><td align="left" balign="left"> + getTypeParameters() : TypeVariable&lt;Class&lt;T&gt;&gt;[] </td></tr>
<tr><td align="left" balign="left"> + getSuperclass() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getGenericSuperclass() : Type </td></tr>
<tr><td align="left" balign="left"> + getPackage() : Package </td></tr>
<tr><td align="left" balign="left"> + getInterfaces() : Class&lt;?&gt;[] </td></tr>
<tr><td align="left" balign="left"> + getGenericInterfaces() : Type[] </td></tr>
<tr><td align="left" balign="left"> + getComponentType() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getModifiers() : int </td></tr>
<tr><td align="left" balign="left"> + getSigners() : Object[] </td></tr>
<tr><td align="left" balign="left"> + getEnclosingMethod() : Method </td></tr>
<tr><td align="left" balign="left"> + getEnclosingConstructor() : Constructor&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getDeclaringClass() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getEnclosingClass() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getSimpleName() : String </td></tr>
<tr><td align="left" balign="left"> + getCanonicalName() : String </td></tr>
<tr><td align="left" balign="left"> + isAnonymousClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isLocalClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isMemberClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + getClasses() : Class&lt;?&gt;[] </td></tr>
<tr><td align="left" balign="left"> + getFields() : Field[] </td></tr>
<tr><td align="left" balign="left"> + getMethods() : Method[] </td></tr>
<tr><td align="left" balign="left"> + getConstructors() : Constructor&lt;?&gt;[] </td></tr>
<tr><td align="left" balign="left"> + getField(arg0 : String) : Field </td></tr>
<tr><td align="left" balign="left"> + getMethod(arg0 : String, arg1 : Class&lt;?&gt;[]) : Method </td></tr>
<tr><td align="left" balign="left"> + getConstructor(arg0 : Class&lt;?&gt;[]) : Constructor&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getDeclaredClasses() : Class&lt;?&gt;[] </td></tr>
<tr><td align="left" balign="left"> + getDeclaredFields() : Field[] </td></tr>
<tr><td align="left" balign="left"> + getDeclaredMethods() : Method[] </td></tr>
<tr><td align="left" balign="left"> + getDeclaredConstructors() : Constructor&lt;?&gt;[] </td></tr>
<tr><td align="left" balign="left"> + getDeclaredField(arg0 : String) : Field </td></tr>
<tr><td align="left" balign="left"> + getDeclaredMethod(arg0 : String, arg1 : Class&lt;?&gt;[]) : Method </td></tr>
<tr><td align="left" balign="left"> + getDeclaredConstructor(arg0 : Class&lt;?&gt;[]) : Constructor&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getResourceAsStream(arg0 : String) : InputStream </td></tr>
<tr><td align="left" balign="left"> + getResource(arg0 : String) : URL </td></tr>
<tr><td align="left" balign="left"> + getProtectionDomain() : ProtectionDomain </td></tr>
<tr><td align="left" balign="left"> + desiredAssertionStatus() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnum() : boolean </td></tr>
<tr><td align="left" balign="left"> + getEnumConstants() : T[] </td></tr>
<tr><td align="left" balign="left"> + cast(arg0 : Object) : T </td></tr>
<tr><td align="left" balign="left"> + asSubclass(arg0 : Class&lt;U&gt;) : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getAnnotation(arg0 : Class&lt;A&gt;) : A </td></tr>
<tr><td align="left" balign="left"> + isAnnotationPresent(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + getAnnotations() : Annotation[] </td></tr>
<tr><td align="left" balign="left"> + getDeclaredAnnotations() : Annotation[] </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.Object
	c1015 [label=<<table title="java.lang.Object" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Object.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Object </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Object() </td></tr>
<tr><td align="left" balign="left"> + getClass() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> # clone() : Object </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + notify() </td></tr>
<tr><td align="left" balign="left"> + notifyAll() </td></tr>
<tr><td align="left" balign="left"> + wait(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + wait(arg0 : long, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + wait() </td></tr>
<tr><td align="left" balign="left"> # finalize() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.springframework.validation.Errors
	c1014 [label=<<table title="org.springframework.validation.Errors" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/springframework/validation/Errors.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Errors </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NESTED_PATH_SEPARATOR : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getObjectName() : String </td></tr>
<tr><td align="left" balign="left"> + setNestedPath(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + getNestedPath() : String </td></tr>
<tr><td align="left" balign="left"> + pushNestedPath(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + popNestedPath() </td></tr>
<tr><td align="left" balign="left"> + reject(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + reject(arg0 : String, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + reject(arg0 : String, arg1 : Object[], arg2 : String) </td></tr>
<tr><td align="left" balign="left"> + rejectValue(arg0 : String, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + rejectValue(arg0 : String, arg1 : String, arg2 : String) </td></tr>
<tr><td align="left" balign="left"> + rejectValue(arg0 : String, arg1 : String, arg2 : Object[], arg3 : String) </td></tr>
<tr><td align="left" balign="left"> + addAllErrors(arg0 : Errors) </td></tr>
<tr><td align="left" balign="left"> + hasErrors() : boolean </td></tr>
<tr><td align="left" balign="left"> + getErrorCount() : int </td></tr>
<tr><td align="left" balign="left"> + getAllErrors() : List&lt;ObjectError&gt; </td></tr>
<tr><td align="left" balign="left"> + hasGlobalErrors() : boolean </td></tr>
<tr><td align="left" balign="left"> + getGlobalErrorCount() : int </td></tr>
<tr><td align="left" balign="left"> + getGlobalErrors() : List&lt;ObjectError&gt; </td></tr>
<tr><td align="left" balign="left"> + getGlobalError() : ObjectError </td></tr>
<tr><td align="left" balign="left"> + hasFieldErrors() : boolean </td></tr>
<tr><td align="left" balign="left"> + getFieldErrorCount() : int </td></tr>
<tr><td align="left" balign="left"> + getFieldErrors() : List&lt;FieldError&gt; </td></tr>
<tr><td align="left" balign="left"> + getFieldError() : FieldError </td></tr>
<tr><td align="left" balign="left"> + hasFieldErrors(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getFieldErrorCount(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + getFieldErrors(arg0 : String) : List&lt;FieldError&gt; </td></tr>
<tr><td align="left" balign="left"> + getFieldError(arg0 : String) : FieldError </td></tr>
<tr><td align="left" balign="left"> + getFieldValue(arg0 : String) : Object </td></tr>
<tr><td align="left" balign="left"> + getFieldType(arg0 : String) : Class&lt;?&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

